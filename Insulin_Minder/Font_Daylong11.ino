// 
//  Font data for Bit Daylong11 (sRB) 8pt
// 
// Font information for Bit Daylong11 (sRB) 8pt
// Character height: 1
// Start character: .
// End character: Z
// Width, in pixels, of space character: 2

#include <avr/pgmspace.h>

prog_uchar Bit_Daylong11[] PROGMEM = 
{
	// @0 '.' (2 pixels wide)
	0xC0, // ##
	0xC0, // ##

	// @2 '/' (4 pixels wide)
	0xC0, // ##      
	0xFC, // ######  
	0x3F, //   ######
	0x03, //       ##

	// @6 '0' (5 pixels wide)
	0x7E, //  ###### 
	0xFF, // ########
	0x81, // #      #
	0xFF, // ########
	0x7E, //  ###### 

	// @11 '1' (4 pixels wide)
	0x0C, //     ##  
	0x06, //      ## 
	0xFF, // ########
	0xFF, // ########

	// @15 '2' (5 pixels wide)
	0xC2, // ##    # 
	0xE3, // ###   ##
	0xB1, // # ##   #
	0x9F, // #  #####
	0x8E, // #   ### 

	// @20 '3' (5 pixels wide)
	0x42, //  #    # 
	0xC3, // ##    ##
	0x89, // #   #  #
	0xFF, // ########
	0x76, //  ### ## 

	// @25 '4' (6 pixels wide)
	0x30, //   ##    
	0x2C, //   # ##  
	0x22, //   #   # 
	0xFF, // ########
	0xFF, // ########
	0x20, //   #     

	// @31 '5' (5 pixels wide)
	0x4E, //  #  ### 
	0xCF, // ##  ####
	0x89, // #   #  #
	0xF9, // #####  #
	0x71, //  ###   #

	// @36 '6' (5 pixels wide)
	0x7E, //  ###### 
	0xFF, // ########
	0x89, // #   #  #
	0xFB, // ##### ##
	0x72, //  ###  # 

	// @41 '7' (5 pixels wide)
	0x01, //        #
	0xF1, // ####   #
	0xFD, // ###### #
	0x0F, //     ####
	0x03, //       ##

	// @46 '8' (5 pixels wide)
	0x76, //  ### ## 
	0xFF, // ########
	0x89, // #   #  #
	0xFF, // ########
	0x76, //  ### ## 

	// @51 '9' (5 pixels wide)
	0x4E, //  #  ### 
	0xDF, // ## #####
	0x91, // #  #   #
	0xFF, // ########
	0x7E, //  ###### 

	// @56 ':' (2 pixels wide)
	0xCC, // ##  ##
	0xCC, // ##  ##

	// @58 ';' (2 pixels wide)
	0xB3, // # ##  ##
	0x73, //  ###  ##

	// @60 '<' (6 pixels wide)
	0x30, //   ##  
	0x30, //   ##  
	0x48, //  #  # 
	0x48, //  #  # 
	0x84, // #    #
	0x84, // #    #

	// @66 '=' (5 pixels wide)
	0x90, // #  #
	0x90, // #  #
	0x90, // #  #
	0x90, // #  #
	0x90, // #  #

	// @71 '>' (6 pixels wide)
	0x84, // #    #
	0x84, // #    #
	0x48, //  #  # 
	0x48, //  #  # 
	0x30, //   ##  
	0x30, //   ##  

	// @77 '?' (5 pixels wide)
	0x06, //      ## 
	0xD3, // ## #  ##
	0xD9, // ## ##  #
	0x0F, //     ####
	0x06, //      ## 

	// @82 '@' (10 pixels wide)
	0x1E, 0x00, //    ####   
	0x61, 0x80, //  ##    ## 
	0x5C, 0x80, //  # ###  # 
	0xA3, 0x40, // # #   ## #
	0xA1, 0x40, // # #    # #
	0xB1, 0x40, // # ##   # #
	0xBF, 0x40, // # ###### #
	0xA3, 0x40, // # #   ## #
	0x50, 0x80, //  # #    # 
	0x4F, 0x00, //  #  ####  

	// @102 'A' (7 pixels wide)
	0xE0, // ###     
	0xFC, // ######  
	0x3F, //   ######
	0x23, //   #   ##
	0x3F, //   ######
	0xFC, // ######  
	0xE0, // ###     

	// @109 'B' (6 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x89, // #   #  #
	0x89, // #   #  #
	0xFF, // ########
	0x76, //  ### ## 

	// @115 'C' (7 pixels wide)
	0x3C, //   ####  
	0x7E, //  ###### 
	0xC3, // ##    ##
	0x81, // #      #
	0x81, // #      #
	0xC3, // ##    ##
	0x42, //  #    # 

	// @122 'D' (6 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x81, // #      #
	0x81, // #      #
	0xFF, // ########
	0x7E, //  ###### 

	// @128 'E' (5 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x89, // #   #  #
	0x89, // #   #  #
	0x89, // #   #  #

	// @133 'F' (5 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x09, //     #  #
	0x09, //     #  #
	0x09, //     #  #

	// @138 'G' (7 pixels wide)
	0x3C, //   ####  
	0x7E, //  ###### 
	0xC3, // ##    ##
	0x81, // #      #
	0x91, // #  #   #
	0xF3, // ####  ##
	0x72, //  ###  # 

	// @145 'H' (6 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x08, //     #   
	0x08, //     #   
	0xFF, // ########
	0xFF, // ########

	// @151 'I' (6 pixels wide)
	0x81, // #      #
	0x81, // #      #
	0xFF, // ########
	0xFF, // ########
	0x81, // #      #
	0x81, // #      #

	// @157 'J' (5 pixels wide)
	0x41, //  #     #
	0xC1, // ##     #
	0x81, // #      #
	0xFF, // ########
	0x7F, //  #######

	// @162 'K' (6 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x18, //    ##   
	0x3E, //   ##### 
	0xF7, // #### ###
	0xC1, // ##     #

	// @168 'L' (6 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x80, // #       
	0x80, // #       
	0x80, // #       
	0x80, // #       

	// @174 'M' (9 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x0F, //     ####
	0x7C, //  #####  
	0xE0, // ###     
	0x7C, //  #####  
	0x0F, //     ####
	0xFF, // ########
	0xFF, // ########

	// @183 'N' (6 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x0C, //     ##  
	0x30, //   ##    
	0xFF, // ########
	0xFF, // ########

	// @189 'O' (7 pixels wide)
	0x3C, //   ####  
	0x7E, //  ###### 
	0xC3, // ##    ##
	0x81, // #      #
	0xC3, // ##    ##
	0x7E, //  ###### 
	0x3C, //   ####  

	// @196 'P' (6 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x11, //    #   #
	0x11, //    #   #
	0x1F, //    #####
	0x0E, //     ### 

	// @202 'Q' (7 pixels wide)
	0x1E, 0x00, //    ####  
	0x3F, 0x00, //   ###### 
	0x61, 0x80, //  ##    ##
	0x50, 0x80, //  # #    #
	0x61, 0x80, //  ##    ##
	0xBF, 0x00, // # ###### 
	0x1E, 0x00, //    ####  

	// @216 'R' (7 pixels wide)
	0xFF, // ########
	0xFF, // ########
	0x11, //    #   #
	0x31, //   ##   #
	0x7F, //  #######
	0xCE, // ##  ### 
	0x80, // #       

	// @223 'S' (6 pixels wide)
	0xCE, // ##  ### 
	0xCF, // ##  ####
	0x99, // #  ##  #
	0x99, // #  ##  #
	0xF3, // ####  ##
	0x72, //  ###  # 

	// @229 'T' (8 pixels wide)
	0x01, //        #
	0x01, //        #
	0x01, //        #
	0xFF, // ########
	0xFF, // ########
	0x01, //        #
	0x01, //        #
	0x01, //        #

	// @237 'U' (6 pixels wide)
	0x7F, //  #######
	0xFF, // ########
	0x80, // #       
	0x80, // #       
	0xFF, // ########
	0x7F, //  #######

	// @243 'V' (7 pixels wide)
	0x03, //       ##
	0x3F, //   ######
	0xFC, // ######  
	0xC0, // ##      
	0xFC, // ######  
	0x3F, //   ######
	0x03, //       ##

	// @250 'W' (11 pixels wide)
	0x03, //       ##
	0x3F, //   ######
	0xFC, // ######  
	0xE0, // ###     
	0x3E, //   ##### 
	0x07, //      ###
	0x3E, //   ##### 
	0xE0, // ###     
	0xFC, // ######  
	0x3F, //   ######
	0x03, //       ##

	// @261 'X' (6 pixels wide)
	0xC3, // ##    ##
	0xE7, // ###  ###
	0x3C, //   ####  
	0x3C, //   ####  
	0xE7, // ###  ###
	0xC3, // ##    ##

	// @267 'Y' (6 pixels wide)
	0x03, //       ##
	0x0F, //     ####
	0xF8, // #####   
	0xF8, // #####   
	0x0F, //     ####
	0x03, //       ##

	// @273 'Z' (6 pixels wide)
	0xC1, // ##     #
	0xE1, // ###    #
	0xB9, // # ###  #
	0x9D, // #  ### #
	0x87, // #    ###
	0x83, // #     ##
};

prog_uchar Bit_Daylong11_width[] PROGMEM = 
{
	2, 		// . 
	4, 		// / 
	5, 		// 0 
	4, 		// 1 
	5, 		// 2 
	5, 		// 3 
	6, 		// 4 
	5, 		// 5 
	5, 		// 6 
	5, 		// 7 
	5, 		// 8 
	5, 		// 9 
	2, 		// : 
	2, 		// ; 
	6, 		// < 
	5, 		// = 
	6, 		// > 
	5, 		// ? 
	10, 	// @ 
	7, 		// A 
	6, 		// B 
	7, 		// C 
	6, 		// D 
	5, 		// E 
	5, 		// F 
	7, 		// G 
	6, 		// H 
	6, 		// I 
	5, 		// J 
	6, 		// K 
	6, 		// L 
	9, 		// M 
	6, 		// N 
	7, 		// O 
	6, 		// P 
	7, 		// Q 
	7, 		// R 
	6, 		// S 
	8, 		// T 
	6, 		// U 
	7, 		// V 
	11, 	// W 
	6, 		// X 
	6, 		// Y 
	6, 		// Z 
};

prog_uint16_t Bit_Daylong11_offset[] PROGMEM = 
{
	0, 			// . 
	2, 			// / 
	6, 			// 0 
	11, 		// 1 
	15, 		// 2 
	20, 		// 3 
	25, 		// 4 
	31, 		// 5 
	36, 		// 6 
	41, 		// 7 
	46, 		// 8 
	51, 		// 9 
	56, 		// : 
	58, 		// ; 
	60, 		// < 
	66, 		// = 
	71, 		// > 
	77, 		// ? 
	82, 		// @ 
	102, 		// A 
	109, 		// B 
	115, 		// C 
	122, 		// D 
	128, 		// E 
	133, 		// F 
	138, 		// G 
	145, 		// H 
	151, 		// I 
	157, 		// J 
	162, 		// K 
	168, 		// L 
	174, 		// M 
	183, 		// N 
	189, 		// O 
	196, 		// P 
	202, 		// Q 
	216, 		// R 
	223, 		// S 
	229, 		// T 
	237, 		// U 
	243, 		// V 
	250, 		// W 
	261, 		// X 
	267, 		// Y 
	273, 		// Z 
};



